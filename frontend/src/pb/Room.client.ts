// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "Room.proto" (package "muni", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RoomService } from "./Room";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListRoomsResponse } from "./Room";
import type { ListRoomsRequest } from "./Room";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service muni.RoomService
 */
export interface IRoomServiceClient {
    /**
     * @generated from protobuf rpc: ListRooms(muni.ListRoomsRequest) returns (muni.ListRoomsResponse);
     */
    listRooms(input: ListRoomsRequest, options?: RpcOptions): UnaryCall<ListRoomsRequest, ListRoomsResponse>;
}
/**
 * @generated from protobuf service muni.RoomService
 */
export class RoomServiceClient implements IRoomServiceClient, ServiceInfo {
    typeName = RoomService.typeName;
    methods = RoomService.methods;
    options = RoomService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ListRooms(muni.ListRoomsRequest) returns (muni.ListRoomsResponse);
     */
    listRooms(input: ListRoomsRequest, options?: RpcOptions): UnaryCall<ListRoomsRequest, ListRoomsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListRoomsRequest, ListRoomsResponse>("unary", this._transport, method, opt, input);
    }
}
